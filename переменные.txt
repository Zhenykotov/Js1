var mum = 10 - создание переменной
const namber = 10 -- нельзя изменить
Условные операторы:
|| -- или
&& -- и

var age = 28;
switch (age) {
  case 45:
    console.log('45');
    break;
  case 27:
    console.log('28');
    break;
  default:
    console.log('no age');
}


var a = 10;
var b = 15
if(a>9 && b==15 ) {
  console.log('ok');
}
else {
  console.log('no');
}


работа с масивами 
var mas = [22,45,88,'Zhenya',1.25]
mas[0]='kotov'
console.log(mas);
var nass = [[22,33,55],[55,88,98],['ggg','nhhh','fff']]
nass [2][2] = 'Zhenya'
console.log(nass);


цыклы 

for (var i = 0; i < 11; i++) {
  console.log(i);
}

var r = 100;
while (r>10) {
  console.log(r);
  r-=10;

}
var i = 1; // Создание переменной
while (i <= 10) { // Здесь только условие
	console.log(i);
	i++; // Увеличение переменной

for (var i = 0; i <=40; i+=2) {
  if(i>20)
  break;
  console.log(i);
}


функция alert() позволяет выводить информацию во всплывающем окне;
функция confirm () позволяет спрашивать соглашение во всплывающем окне;
функция prompt() получает данные от пользователя во всплывающем окне.

var age = confirm('Do you have 18 age ?');
if(age){
  alert('You are welcom');
} else {
  alert("sorry, you haven't 18 age !" )
}
----------------!!!!!!
<button onclick="alert('you push me');">Enter me</button>(in html)
var count=0;

function Enter() {
  count++;
  console.log(count);(js file)
}

<button onclick="Enter()">Enter</button>(in html)
var count=0;
function Enter() {
  count++;
  console.log(count);
}(in js)

var data = new Date();
 console.log(data.getFullYear());




Классы и объекты. Понятие ООП
На начальном этапе ООП – это тёмный лес, в котором многое непонятно и слишком усложнено. На самом деле всё вовсе не так. Предлагаем абстрагироваться от специфических (непонятных) определений и познакомиться с ООП простыми словами. 



Поскольку на примере все усвоить гораздо проще, то давайте за пример возьмем робота, которого постараемся описать за счёт классов в ООП.



Класс в случае с роботом – это его чертёж. Экземпляром класса (объектом) называет целый робот, который создан точно по чертежу.


Наследование – это добавление полезных опций к чертежу робота. К примеру, берем стандартный чертёж робота и дорисуем к нему лазеры, крылья и броню. Все эти дорисовки мы сделаем в классе наследнике, основной функционал которого взят из родительского класса.



Полиморфизм – это общий функционал для всех роботов и не важно что каждый робот может очень сильно отличаться друг от друга. К примеру, в главном классе мы указываем возможность передвижения для всех последующих роботов. Далее в классе наследнике мы можем дополнительно указать возможность левитации для робота, в другом же классе укажем возможность передвижения по воде и так далее. Получается, что есть общий функционал что записан в главном чертеже, но его можно переписать для каждого последующего робота (для каждого наследника).



А инкапсуляция является для нас бронёй, защищающей робота. Под пластырем брони находятся уязвимые элементы, вроде проводов и микросхем. После прикрытия брешей с помощью брони, робот полностью защищён от внешних вмешательств. По сути, мы делаем доступ ко всем полям лишь за счёт методов, тем самым прямой доступ к полю будет закрыт.



У всех классов методы могут отличаться, как и поля с конструкторами. Каждый класс позволяет создавать любое количество разных объектов, все из них имеют собственные характеристики.



class Person {
  constructor(name,age,phone) {
    this.name=name;
    this.age=age;
    this.phone=phone;
  }
  info(){
    console.log('name : ' + this.name + ' age: ' + this.age  + ' phone: ' + this.phone );
  }
}

var Djoni = new Person('Djoni', 27,+380993731077)
var Olha=new Person('Olha',26,+380665047803)
Djoni.info();
Olha.info();

typeof --------- определить тип данных


обьекты ---------
let car = {
  color: 'red',
  speadMax: 220,
  audi:{
    brend: 'sonny',
    }
};
console.log(typeof car);
console.log(car.speadMax);

условные операторы ---------

let car = {
  color: 'red',
  speadMax: 220,
  audi:{
    brend: 'sonny',
    }
};
if(car.color == 'black'){
  console.log('avto black');
}
else if(car.color == 'yellow'){
  console.log('car yellow');
}
else{
  console.log('year car red');
}



------------
let car ={
  maxSpeead: 240,
};
console.log('Max speed was: ' + car.maxSpeead);
function apdateSpeed(car){
  car.maxSpeead = 300;
  console.log('Now speed ' + car.maxSpeead);
}
apdateSpeed(car)


